; Joomla! Add FullAjax
; Note : All ini files need to be saved as UTF-8

PLG_SYSTEM_ADDFULLAJAX="System - Add FullAjax"


PLG_ADDFULLAJAX_FIELD_CONTID_LABEL="Content CSS id"
PLG_ADDFULLAJAX_FIELD_CONTID_DESCR="Enter the id where the component is shown. Look in you template. If it not exist there you ned add.<br /><span style='color:purple;'>Example</span>: see in description"

PLG_ADDFULLAJAX_FIELD_POSITIONUPD_LABEL="Positions update method"
PLG_ADDFULLAJAX_FIELD_POSITIONUPD_DESCR="Method used for update the template positions (more in Description)"
PLG_ADDFULLAJAX_FIELD_POSITIONUPD_SEMI="Yes, semi-automatically"
PLG_ADDFULLAJAX_FIELD_POSITIONUPD_MANUALLY="Yes, manually, using 'fullajax_tmpl'"
PLG_ADDFULLAJAX_FIELD_POSITIONUPD_AUTO="Yes. Automatically"


PLG_ADDFULLAJAX_FIELD_POSPARAMS_LABEL="Position parameters"
PLG_ADDFULLAJAX_FIELD_POSPARAMS_DESCR="Options positions for semi-automatic update.<br />Enter the pair <span style='color:teal;'> position | ID </ span> for each position.<br /><span style='color:purple;'>Example for 3 positions</span>: <span style='color:teal;'>position1:id1|position2:id2|position3:id3</span>"

PLG_ADDFULLAJAX_FIELD_ALLOWED_POS_LABEL="Update positions"
PLG_ADDFULLAJAX_FIELD_ALLOWED_POS_DESCR="Select positions that need update"

PLG_ADDFULLAJAX_FIELD_USEGA_LABEL="I use Google Analytics"
PLG_ADDFULLAJAX_FIELD_USEGA_DESCR="Set 'Yes' if you use Google Analytics"

PLG_ADDFULLAJAX_FIELD_USEDIFFSTYLE_LABEL="I use various template"
PLG_ADDFULLAJAX_FIELD_USEDIFFSTYLE_DESCR="Set 'Yes' if you use different template for some page"

PLG_ADDFULLAJAX_FIELD_USERCACHE_LABEL="Enable User-side Cache"
PLG_ADDFULLAJAX_FIELD_USERCACHE_DESCR="FullAJAX will try cache the requests in the user browser"

PLG_ADDFULLAJAX_FIELD_USEHTML5_LABEL="Use HTML5 History"
PLG_ADDFULLAJAX_FIELD_USEHTML5_DESCR="Enable using HTML5 History API"

PLG_ADDFULLAJAX_FIELD_SCRLUP_LABEL="Auto scroll Up"
PLG_ADDFULLAJAX_FIELD_SCRLUP_DESCR="Scroll up the page after each request"

COM_PLUGINS_MENUCONF_FIELDSET_LABEL="Menu config"

PLG_ADDFULLAJAX_FIELD_MENU_ITEMS_IGNOR_LABEL="Ignore menu items"
PLG_ADDFULLAJAX_FIELD_MENU_ITEMS_IGNOR_DESCR="Select menu items that will be loaded without AJAX.<br />The plugin will build the Filter for FullAJAX and FullAJAX will ignore these menu items.<br />Ctrl+Click = unselect"

PLG_ADDFULLAJAX_FIELD_MENU_ITEMS_NO_AX_LOAD_LABEL="Do not use FullAjax on:"
PLG_ADDFULLAJAX_FIELD_MENU_ITEMS_NO_AX_LOAD_DESCR="Select pages where do not need connect FullAjax script.<br />Plugin will not connect the FullAJAX script on these pages.<br />Also this automaticaly add these menu items to the exlude list (so you can leave empty 'Ignore menu items' option).<br />Ctrl+Click = unselect"

PLG_ADDFULLAJAX_FIELD_CHECKMENUIT_LABEL="Check the active menu item"
PLG_ADDFULLAJAX_FIELD_CHECKMENUIT_DESCR="Auto detect the active menu item and add class 'active'"
PLG_ADDFULLAJAX_FIELD_CHECKMENUIT_ACTIVE_FOR_A_LABEL="Add .active for &lt; a &gt;"

PLG_ADDFULLAJAX_FIELD_MENUCLASS_LABEL="Menu css Class or/and ID"
PLG_ADDFULLAJAX_FIELD_MENUCLASS_DESCR="Class or/and ID of parent element of menu, by comma separator.<br />Default '*' - tries find all menu automaticaly.<br /><span style='color:purple;'>Example for Classes</span>: .mymenu_one,.mumenu_other <br /><span style='color:purple;'>Example for IDs</span>: #mymenu_one,#mumenu_other <br /><span style='color:purple;'>Example for mixed</span>: .mymenu_one,#mumenu_other"

PLG_ADDFULLAJAX_FIELD_ON_ANIM_LABEL="Enable animation"
PLG_ADDFULLAJAX_FIELD_ON_ANIM_DESCR="Plugin will take the animation code form the Advanced parameters"

PLG_ADDFULLAJAX_FIELD_CNFG_DATA_LABEL="JavaScript code, parameters for FullAjax"
PLG_ADDFULLAJAX_FIELD_CNFG_DATA_DESCR="Configuration parameters for FullAJAX library.<br />More options can find on Wiki page https://github.com/Fedik/FullAJAX/wiki"

PLG_ADDFULLAJAX_FIELD_ANIM_DATA_LABEL="JavaScript code for animation"
PLG_ADDFULLAJAX_FIELD_ANIM_DATA_DESCR="The animation code that will be used if 'Enable animation' enabled"

PLG_ADDFULLAJAX_FIELD_DEBUG_AJAX_LABEL="Debug AJAX"
PLG_ADDFULLAJAX_FIELD_DEBUG_AJAX_DESCR="For debug AJAX requests. Result can see in the browser console"
PLG_ADDFULLAJAX_FIELD_DEBUG_SCRIPT_LABEL="Debug Scripts"
PLG_ADDFULLAJAX_FIELD_DEBUG_SCRIPT_DESCR="For debug loading &lt; script &gt;. Result can see in the browser console"
PLG_ADDFULLAJAX_FIELD_DEBUG_LINK_LABEL="Debug Links"
PLG_ADDFULLAJAX_FIELD_DEBUG_LINK_DESCR="For debug loading &lt; link &gt;. Result can see in the browser console"
PLG_ADDFULLAJAX_FIELD_DEBUG_STYLE_LABEL="Debug Styles"
PLG_ADDFULLAJAX_FIELD_DEBUG_STYLE_DESCR="For debug loading &lt; style &gt;. Result can see in the browser console"
PLG_ADDFULLAJAX_FIELD_UNCOMPRESSED_VERSION_LABEL="Uncompressed version"
PLG_ADDFULLAJAX_FIELD_UNCOMPRESSED_VERSION_DESCR="Use uncompressed version of the FullAJAX library"


PLG_ADDFULLAJAX_XML_DESCRIPTION="<h3>Add <a href='https://github.com/Fedik/FullAJAX' target='_blank'>FullAjax library</a>  to <a href='http://www.joomla.org' target='_blank' >Joomla!</a> </h3>
<div>
<p>This plugin add <a href='https://github.com/Fedik/FullAJAX' target='_blank'>FullAjax library</a> in to <a href='http://www.joomla.org' target='_blank' >Joomla!</a>
<br />It work only on frontend.
<br />Install template <span style='color:purple;'>fullajax_tmpl</span> only if you want use advanced configuration for update module. It is <b>NOT</b> important.
</p>
<fieldset><legend>Base</legend>
<div>If you have a template that wrote using the Joomla standarts, all should start work automaticaly, so when all will be installed you can go to the main page and make sure that the plugin works, and your site now with FullAJAX ;)</div>
</fieldset>
<fieldset><legend>Positions update methods</legend>
<div>For update the modules for each page.
<p>
<h3>There are next methods available:</h3>
<ul>
 <li style='list-style: disc;margin-left: 20px;'><a href='#method-no'>No</a></li>
 <li style='list-style: disc;margin-left: 20px;'><a href='#method-auto'>automatically (default)</a></li>
 <li style='list-style: disc;margin-left: 20px;'><a href='#method-semi'>semi-automatically</a></li>
 <li style='list-style: disc;margin-left: 20px;'><a href='#method-fullajax_tmpl'>manually, using 'fullajax_tmpl'</a></li>
</ul>
</p>
<p><span style='color: red;'>Before continue:</span>
Remamber if the module looks the same on every page you do not need to update it.
</p>
<h3 id='method-no'>Method 'No'</h3>
<p>This method will update only the content. And useful if you no need the position updates.</p>
<p>
It required some configuration:
<br />First you need add <span style='color: purple;'>id='content'</span> in you template where is the component and message shown.
<p style='color: green;'>Example:</p>
<pre>
&lt;div <span style='color: purple;'>id='content'</span>&gt;
  &lt;jdoc:include type='message' /&gt;
  &lt;jdoc:include type='component' /&gt;
&lt;/div&gt;
</pre>
If <span style='color: purple;'>id</span> already exist then enter this <span style='color: purple;'>id</span> in the plugin configuration in the field <span style='color: teal;'>'Content CSS id'</span>.
</p>

<h3 id='method-auto'>Method 'Automatically'</h3>
<p>
Plugin will try generate the configuration for FullAJAX automaticaly.<br />
Plugin will try add the id (on fly) for a each position that selected for update.<br />
By default this method will update the content only.<br />
For update the positions you need select only the position that you want to update via AJAX.
</p>
<p>
<span style='color: red;'>Be warned:</span>
This method can work wrong with the template framework.
</p>
<p>
<span style='color: red;'>Be warned:</span>
If the position(s) that you want update in you template have construction like:
<pre>
&lt;?php <span style='color: purple;'>if ($this->countModules('position-name')):</span> ?&gt;
&lt;jdoc:include type='modules' name='<span style='color: teal;'>position-name</span>' /&gt;
&lt;?php <span style='color: purple;'>endif;</span> ?&gt;
</pre>
you need remove <span style='color: purple;'>if()</span> statement, because plugin cannot work with this thing,
so the previous example code need change to:
<pre>&lt;jdoc:include type='modules' name='<span style='color: teal;'>position-name</span>' /&gt;</pre>
</p>

<h3 id='method-semi'>Method 'Semi-automatically'</h3>
<p>Plugin will generate the configuration for FullAJAX depend from the data entered here.</p>
<p>
<span style='color: red;'>Be warned:</span>
This method will be removed in future.
</p>
For configure this method do next:
<ul>
  <li>1. Go to edit you a template file index.php.
<br />You need add <span style='color: purple;'>id='content'</span> in
you <a href='/administrator/index.php?option=com_templates' target='_balank' title='go to Template Manager'>template</a> where is component and message.
<p style='color: green;'>Example:</p>
<pre>&lt;div <span style='color: purple;'>id='content'</span>&gt;<br />  &lt;jdoc:include type='message' /&gt;<br />  &lt;jdoc:include type='component' /&gt;<br />&lt;/div&gt;<br /></pre>
<br />
If <span style='color: purple;'>id</span> already exist then enter this <span style='color: purple;'>id</span> name
in plugin configuration in the field <span style='color: teal;'>'Content CSS id'</span>.
<br />Then need to add ID for each position what you plan to update.
<br />
    <span style='color: green;'>Example for <span style='color: purple;'>breadcrumbs</span> and <span style='color: purple;'>user3</span>:</span>
    <pre>&lt;div <span style='color: purple;'>id='pathway'</span>&gt;<br />	&lt;jdoc:include type='modules' <span style='color: teal;'><acronym title='position name'>name='breadcrumbs'</acronym></span> /&gt;<br />&lt;/div&gt;<br />&lt;div <span style='color: purple;'>id='myCoolModule'</span>&gt;<br />	&lt;jdoc:include type='modules' <span style='color: teal;'><acronym title='position name'>name='user3'</acronym></span> /&gt;<br />&lt;/div&gt;</pre>
  </li>
  <li>2. Go to plugin configuration. There need enter position
parameters in field 'Position parameters'. <br />
Like next: <span style='color: teal;'>position</span><b>:</b><span style='color: purple;'>id</span><b>|</b><span style='color: teal;'>position2</span><b>:</b><span style='color: purple;'>id2</span>. <br />
    <span style='color: green;'>Example for <span style='color: purple;'>breadcrumbs</span> and <span style='color: purple;'>user3</span>:</span>
    <pre><span style='color: teal;'>breadcrumbs</span><b>:</b><span style='color: purple;'>pathway</span><b>|</b><span style='color: teal;'>user3</span><b>:</b><span style='color: purple;'>myCoolModule</span></pre>
  </li>
  <li>3. Now set item <span style='color: teal;'>Enable Positions</span>
update as <span style='color: purple;'>semi-automatically</span>.
After save all should work.</li>
</ul>

<h3 id='method-fullajax_tmpl'>Method 'using fullajax_tmpl'</h3>
<p>
This method for advanced configuration.<br />
You can find more about it on the site <a href='http://getsite.org.ua/en/fullajax/how-to-update-more-than-one-module-with-ajax'>How
to update more than one module with Ajax</a>.
</p>
<br />
<span style='color: red;'>If the module looks the same on every page
you do not need to update it.</span>
</div>
</fieldset>
<fieldset>
<legend>About animation</legend>
<div>For change the image you need to edit the code in <span style='color: teal;'>'Js code for animation'</span> field.<br>Gif Image:<br></div>
<pre>var fullAjaxGif = jQuery('&lt;img/&gt;',{<br> 'id':'fullAjaxGif',<br> 'src':<span style='color: purple;'>'/media/plg_system_addfullajax/images/ajax-loader.gif'</span>, <span style='color: green;'>// it pathway to image<br></span>&nbsp;'alt':'Loading...',<br> 'style': 'position:absolute;left:50%;top:40%;z-index:800;'<br>});<br></pre>
<div>For pathway you can use something like <span style='color: purple;'>'http://mysite.com/loading.gif'</span> or <span style='color: purple;'>'/loading.gif'</span>.</div>
<br /><br />
<div>If you want you can make other animation effect. You need edit <span style='color:teal;'>'Js code for animation'</span> field for that.</div>
<p style='color:green;'>Example:</p>
<pre>
FLAX.Effect.add({id: <span style='color:purple;'>'You-Content-ID'</span>,
    start:function(id, request){
       <span style='color:green;'>// Do here animation after click before request</span>
	request(); <span style='color:green;'>// execute this when animation ends</span>
     },
     end:function(){
        <span style='color:green;'>// Do here animation after request</span>
     }
});
</pre>
</fieldset>
<fieldset>
<legend>Support it</legend>
<div>If you like this plugin and you  will want to say thank or if you have some offers or ideas please just  write email <a href='mailto:getthesite@gmail.com'>getthesite@gmail.com</a>.</div>
</fieldset>
</div>";

